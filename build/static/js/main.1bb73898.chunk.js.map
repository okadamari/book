{"version":3,"sources":["layouts/Footer.tsx","layouts/Hero.tsx","layouts/BookRow.tsx","layouts/BookItem.tsx","layouts/BookSearchItem.tsx","layouts/BookSearchDialog.tsx","layouts/SimpleDialog.tsx","layouts/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Footer","classes","className","gutterBottom","component","Hero","Container","maxWidth","paragraph","Grid","container","justify","item","Button","BookRow","props","propsBook","book","memo","Card","CardMedia","image","imageLinks","thumbnail","title","CardContent","authors","type","value","onChange","e","onMemoChange","id","target","CardActions","size","onClick","onDelete","BookItem","description","src","alt","BookSearchItem","onBookAdd","BookSearchDialog","useState","searchedBooks","setBooks","setTitle","author","setAuthor","isSearching","setIsSearching","maxResults","useEffect","url","conditions","push","join","buildSearchUrl","fetch","then","res","json","items","map","volumeInfo","extractBooks","books","catch","err","Error","bookItems","b","handleBookAdd","placeholder","alert","SimpleDialog","onClose","emails","selectedValue","open","Dialog","aria-labelledby","DialogTitle","List","email","ListItem","button","ListItemText","primary","APP_KEY","cards","Album","modalIsOpen","setModalIsOpen","storedBooks","localStorage","getItem","JSON","parse","setItem","stringify","bookRows","newBooks","handleBookMemoChange","filter","handleBookDelete","React","setOpen","setSelectedValue","CssBaseline","AppBar","position","Toolbar","noWrap","fullWidth","newBook","now","xs","sm","md","reportWebVitals","onPerfEntry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bb73898.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright(): JSX.Element {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>\n      {' '}\n      {new Date().getFullYear()}\n      .\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Footer(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Footer\n      </Typography>\n      <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n        Something here to give the footer a purpose!\n      </Typography>\n      <Copyright />\n    </footer>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Hero(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Album layout\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Something short and leading about the collection belowâits contents, the creator, etc.\n          Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n          entirely.\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\">\n                Main call to action\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button variant=\"outlined\" color=\"primary\">\n                Secondary action\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BookToRead } from '../types/BookToRead';\n\ntype BookRowProps = {\n  book: BookToRead;\n  onMemoChange: (id: number, memo: string) => void;\n  onDelete: (id: number) => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst BookRow = (props: BookRowProps): JSX.Element => {\n  const { book: propsBook } = props;\n  const { book, memo } = propsBook;\n  const classes = useStyles();\n\n  const handleMemoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onMemoChange(props.book.id, e.target.value);\n  };\n\n  const handleDeleteClick = () => {\n    props.onDelete(props.book.id);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image={book.imageLinks.thumbnail}\n        title={`${book.title}ã®ãµã ãã¤ã«`}\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {book.title}\n        </Typography>\n        <Typography>\n          {book.authors}\n        </Typography>\n        <input\n          type=\"text\"\n          className=\"memo\"\n          value={memo}\n          onChange={handleMemoChange}\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={handleDeleteClick}\n        >\n          åé¤\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Edit\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default BookRow;\n","import React from 'react';\nimport { BookDescription } from '../types/BookDescription';\n\nconst BookItem = (description: BookDescription): JSX.Element => {\n  const { title, authors, imageLinks } = description;\n  return (\n    <>\n      <h2 title={title}>{title}</h2>\n      <div className=\"authors\" title={authors}>\n        {authors}\n      </div>\n      {imageLinks ? <img src={imageLinks.thumbnail} alt=\"\" /> : null}\n    </>\n  );\n};\n\nexport default BookItem;\n","import React from 'react';\nimport { BookDescription } from '../types/BookDescription';\nimport BookItem from './BookItem';\n\ntype BookSearchItemProps = {\n  description: BookDescription;\n  onBookAdd: (book: BookDescription) => void;\n};\n\nconst BookSearchItem = (props: BookSearchItemProps): JSX.Element => {\n  const handleAddBookClick = () => {\n    props.onBookAdd(props.description);\n  };\n  const { description } = props;\n  const { title, authors, imageLinks } = description;\n  return (\n    <div className=\"book-item\">\n      <button type=\"button\" onClick={handleAddBookClick}>\n        <span>+</span>\n      </button>\n      <BookItem\n        title={title}\n        authors={authors}\n        imageLinks={imageLinks}\n      />\n    </div>\n  );\n};\n\nexport default BookSearchItem;\n","import React, { useState, useEffect } from 'react';\nimport { BookDescription } from '../types/BookDescription';\nimport { GoogleBooksAPIResults } from '../types/GoogleBooksAPIResults';\nimport BookSearchItem from './BookSearchItem';\n\nfunction buildSearchUrl(title: string, author: string, maxResults: number): string {\n  const url = 'https://www.googleapis.com/books/v1/volumes?q=';\n  const conditions: string[] = [];\n  if (title) {\n    conditions.push(`intitle:${title}`);\n  }\n  if (author) {\n    conditions.push(`inauthor:${author}`);\n  }\n  return `${url + conditions.join('+')}&maxResults=${maxResults}`;\n}\n\nfunction extractBooks(json: GoogleBooksAPIResults): BookDescription[] {\n  const { items } = json;\n  return items.map((item) => {\n    const { volumeInfo } = item;\n    const { title, authors, imageLinks } = volumeInfo;\n    return {\n      title,\n      authors,\n      imageLinks,\n    };\n  });\n}\n\ntype BookSearchDialogProps = {\n  maxResults: number;\n  onBookAdd: (book: BookDescription) => void;\n};\n\nconst BookSearchDialog = (props: BookSearchDialogProps): JSX.Element => {\n  const [searchedBooks, setBooks] = useState([] as BookDescription[]);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const { maxResults } = props;\n\n  useEffect(() => {\n    if (isSearching) {\n      const url = buildSearchUrl(title, author, maxResults);\n      fetch(url)\n        .then((res) => res.json())\n        .then((json) => extractBooks(json))\n        .then((books) => {\n          setBooks(books);\n        })\n        .catch((err) => {\n          throw new Error(err);\n        });\n    }\n    setIsSearching(false);\n  }, [author, isSearching, maxResults, title]);\n\n  function handleTitleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(e.target.value);\n  }\n\n  const handleAuthorInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAuthor(e.target.value);\n  };\n\n  const handleSearchClick = () => {\n    if (!title && !author) {\n      alert('æ¡ä»¶ãå¥åãã¦ãã ãã');\n      return;\n    }\n    setIsSearching(true);\n  };\n\n  const handleBookAdd = (book: BookDescription) => {\n    props.onBookAdd(book);\n  };\n\n  const bookItems = searchedBooks.map((b) => (\n    <BookSearchItem\n      description={b}\n      onBookAdd={(book) => handleBookAdd(book)}\n      key={b.title}\n    />\n  ));\n\n  return (\n    <div className=\"dialog\">\n      <div className=\"operation\">\n        <div className=\"conditions\">\n          <input\n            type=\"text\"\n            onChange={handleTitleInputChange}\n            placeholder=\"ã¿ã¤ãã«ã§æ¤ç´¢\"\n          />\n          <input\n            type=\"text\"\n            onChange={handleAuthorInputChange}\n            placeholder=\"èèåã§æ¤ç´¢\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"button-like\"\n          onClick={handleSearchClick}\n        >\n          æ¤ç´¢\n        </button>\n      </div>\n      <div className=\"books\">{bookItems}</div>\n    </div>\n  );\n};\n\nexport default BookSearchDialog;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddIcon from '@material-ui/icons/Add';\n\ntype SimpleDialogProps = {\n  onClose: (selectedValue: string) => void,\n  open: boolean,\n  selectedValue: string,\n  emails: string[],\n};\n\nconst SimpleDialog = (props: SimpleDialogProps): JSX.Element => {\n  const {\n    onClose, emails, selectedValue, open,\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value: string) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Add books</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <AddIcon />\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n};\n\nexport default SimpleDialog;\n","import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport { BookToRead } from '../types/BookToRead';\nimport { BookDescription } from '../types/BookDescription';\nimport Footer from './Footer';\nimport Hero from './Hero';\nimport BookRow from './BookRow';\nimport BookSearchDialog from './BookSearchDialog';\n\nimport SimpleDialog from './SimpleDialog';\n\nimport './App.css';\n\nconst APP_KEY = 'react-hooks-tutorial';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Album(): JSX.Element {\n  const classes = useStyles();\n\n  const [books, setBooks] = useState([] as BookToRead[]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    const storedBooks = localStorage.getItem(APP_KEY);\n    if (storedBooks) {\n      setBooks(JSON.parse(storedBooks));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(APP_KEY, JSON.stringify(books));\n  }, [books]);\n\n  const handleBookDelete = (id: number) => {\n    const newBooks = books.filter((b) => b.id !== id);\n    setBooks(newBooks);\n  };\n  const handleBookMemoChange = (id: number, memo: string) => {\n    const newBooks = books.map((book) => (book.id === id\n      ? { ...book, memo }\n      : book));\n    setBooks(newBooks);\n  };\n  const handleAddClick = () => {\n    setModalIsOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalIsOpen(false);\n  };\n\n  const bookRows = books.map((book) => (\n    <BookRow\n      book={book}\n      key={book.id}\n      onMemoChange={(id, memo) => { handleBookMemoChange(id, memo); }}\n      onDelete={(id) => { handleBookDelete(id); }}\n    />\n  ));\n\n  const handleBookAdd = (book: BookDescription) => {\n    const newBook: BookToRead = { book, id: Date.now(), memo: '' };\n    const newBooks = [...books, newBook];\n    setBooks(newBooks);\n  };\n\n  const emails = ['username@gmail.com', 'user02@gmail.com'];\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value:string) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Album layout\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <Hero />\n        <section className=\"nav\">\n          <h1>èª­ã¿ããæ¬ãªã¹ã</h1>\n          <button type=\"button\" className=\"button-like\" onClick={handleAddClick}>\n            æ¬ãè¿½å \n          </button>\n        </section>\n        <section className=\"books\">{bookRows}</section>\n        <Dialog\n          fullWidth\n          maxWidth=\"sm\"\n          onClose={handleModalClose}\n          aria-labelledby=\"simple-dialog-title\"\n          open={modalIsOpen}\n        >\n          <BookSearchDialog maxResults={20} onBookAdd={(b) => handleBookAdd(b)} />\n        </Dialog>\n\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4} />\n            ))}\n          </Grid>\n        </Container>\n\n        <Typography variant=\"subtitle1\">\n          Selected:\n          {selectedValue}\n        </Typography>\n        <br />\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Open simple dialog\n        </Button>\n        <SimpleDialog\n          emails={emails}\n          selectedValue={selectedValue}\n          open={open}\n          onClose={handleClose}\n        />\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler):void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // import('web-vitals').then(({\n    //   getCLS, getFID, getFCP, getLCP, getTTFB,\n    // }) => {\n    //   getCLS(onPerfEntry);\n    //   getFID(onPerfEntry);\n    //   getFCP(onPerfEntry);\n    //   getLCP(onPerfEntry);\n    //   getTTFB(onPerfEntry);\n    // });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}