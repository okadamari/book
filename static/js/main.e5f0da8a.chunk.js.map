{"version":3,"sources":["components/templates/GenericTemplate.tsx","components/pages/ProductPage.tsx","components/pages/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","colors","useStyles","makeStyles","createStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","pageTitle","marginBottom","spacing","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","link","textDecoration","color","text","secondary","Copyright","Typography","variant","align","to","Date","getFullYear","GenericTemplate","children","classes","React","useState","open","setOpen","ThemeProvider","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","Container","maxWidth","Box","pt","ProductPage","HomePage","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5f0da8a.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport * as colors from \"@material-ui/core/colors\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Noto Sans JP\",\n      \"Lato\",\n      \"游ゴシック Medium\",\n      \"游ゴシック体\",\n      \"Yu Gothic Medium\",\n      \"YuGothic\",\n      \"ヒラギノ角ゴ ProN\",\n      \"Hiragino Kaku Gothic ProN\",\n      \"メイリオ\",\n      \"Meiryo\",\n      \"ＭＳ Ｐゴシック\",\n      \"MS PGothic\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    primary: { main: colors.blue[800] }, // テーマの色\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      paddingRight: 24,\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: \"none\",\n    },\n    title: {\n      flexGrow: 1,\n    },\n    pageTitle: {\n      marginBottom: theme.spacing(1),\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: \"100vh\",\n      overflow: \"auto\",\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n    },\n    link: {\n      textDecoration: \"none\",\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" to=\"/\">\n        管理画面\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport interface GenericTemplateProps {\n  children: React.ReactNode;\n  title: string;\n}\n\nconst GenericTemplate: React.FC<GenericTemplateProps> = ({\n  children,\n  title,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              管理画面\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <Link to=\"/\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                  <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"トップページ\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/products\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ShoppingCartIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"商品ページ\" />\n              </ListItem>\n            </Link>\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Typography\n              component=\"h2\"\n              variant=\"h5\"\n              color=\"inherit\"\n              noWrap\n              className={classes.pageTitle}\n            >\n              {title}\n            </Typography>\n            {children}\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default GenericTemplate;","import React from \"react\";\nimport GenericTemplate from \"../templates/GenericTemplate\";\n\nconst ProductPage: React.FC = () => {\n  return (\n    <GenericTemplate title=\"商品ページ\">\n      <>商品ページ内容</>\n    </GenericTemplate>\n  );\n};\n\nexport default ProductPage;","import React from \"react\";\nimport GenericTemplate from \"../templates/GenericTemplate\";\n\nconst HomePage: React.FC = () => {\n  return (\n    <GenericTemplate title=\"トップページ\">\n      <>トップページ内容</>\n    </GenericTemplate>\n  );\n};\n\nexport default HomePage;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ProductPage from \"./components/pages/ProductPage\";\nimport HomePage from \"./components/pages/HomePage\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/products\" component={ProductPage} exact />\n        <Route path=\"/\" component={HomePage} exact />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}